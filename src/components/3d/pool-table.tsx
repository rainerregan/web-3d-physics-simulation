/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Digitalis Reality (https://sketchfab.com/digitalisreality)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/low-poly-pool-table-5b3d3029632a436b9b887aada9c9b131
Title: Low Poly Pool Table
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useBox } from '@react-three/cannon'

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh
    Object_5: THREE.Mesh
    Object_6: THREE.Mesh
    Object_8: THREE.Mesh
    Object_9: THREE.Mesh
    Object_10: THREE.Mesh
    Object_11: THREE.Mesh
    Object_12: THREE.Mesh
    Object_13: THREE.Mesh
    Object_14: THREE.Mesh
    Object_15: THREE.Mesh
    Object_16: THREE.Mesh
    Object_18: THREE.Mesh
    Object_20: THREE.Mesh
    Object_21: THREE.Mesh
    Object_22: THREE.Mesh
    Object_23: THREE.Mesh
    Object_25: THREE.Mesh
    Object_26: THREE.Mesh
    Object_27: THREE.Mesh
    Object_28: THREE.Mesh
  }
  materials: {
    wood: THREE.MeshStandardMaterial
    ['green.001']: THREE.MeshStandardMaterial
    pocket: THREE.MeshStandardMaterial
    light_red: THREE.MeshStandardMaterial
    ['dark_red.001']: THREE.MeshStandardMaterial
    green: THREE.MeshStandardMaterial
    yellow: THREE.MeshStandardMaterial
    orange: THREE.MeshStandardMaterial
    purple: THREE.MeshStandardMaterial
    ['black.001']: THREE.MeshStandardMaterial
    white: THREE.MeshStandardMaterial
    blue: THREE.MeshStandardMaterial
    black: THREE.MeshStandardMaterial
    wood_shaft: THREE.MeshStandardMaterial
    dark_wood: THREE.MeshStandardMaterial
    dark_red: THREE.MeshStandardMaterial
  }
}

export function PoolTable({position, props}:{ position: [number, number, number], props: JSX.IntrinsicElements['group'] }) {
  const { nodes, materials } = useGLTF('/low_poly_pool_table.glb') as GLTFResult

  const [ref, api] = useBox<THREE.Group>(() => ({
    mass: 10,
    angularDamping: 0.95,
    args: [7,2.1,4.5],
    position: position,
    castShadow: true,
    receiveShadow: true,
    type: 'Dynamic',
  }));

  return (
    <group {...props} ref={ref}>
      <group position={[-2.445, 3.677, -0.451]} scale={0.173}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_8.geometry}
          material={materials.light_red}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_9.geometry}
          material={materials['dark_red.001']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_10.geometry}
          material={materials.green}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_11.geometry}
          material={materials.yellow}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_12.geometry}
          material={materials.orange}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_13.geometry}
          material={materials.purple}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_14.geometry}
          material={materials['black.001']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_15.geometry}
          material={materials.white}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_16.geometry}
          material={materials.blue}
        />
      </group>
      <mesh  position={[0,-1.4,0]} castShadow receiveShadow geometry={nodes.Object_4.geometry} material={materials.wood} />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_5.geometry}
        material={materials['green.001']}
        position={[0,-1.4,0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_6.geometry}
        material={materials.pocket}
        position={[0,-1.4,0]}
      />
    </group>
  )
}

useGLTF.preload('/low_poly_pool_table.glb')